#! /bin/bash

CONNECTION_STRING='postgresql://root:password@127.0.0.1:5432/'

USER_MAPSERVER=mapserver
USER_IMPOSM=mapserver_imposm
USER_NOMINATIM_IMPORT=nominatim
USER_NOMINATIM_QUERY=nominatim_user

PASSWORD_MAPSERVER=mapserver
PASSWORD_IMPOSM=imposm
PASSWORD_NOMINATIM_IMPORT=qaIACxO6wMR3
PASSWORD_NOMINATIM_QUERY=qaIACxO6wMR3

DB_MAPSERVER=mapserver_osm
DB_NOMINATIM=nominatim

# Create roles (users)
psql -d $CONNECTION_STRING <<EOC
	CREATE ROLE $USER_MAPSERVER
		WITH	NOSUPERUSER
			NOCREATEDB
			NOCREATEROLE
			NOINHERIT
			LOGIN
			NOREPLICATION
			NOBYPASSRLS
			CONNECTION LIMIT -1
			PASSWORD ${PASSWORD_MAPSERVER@Q};

	CREATE ROLE $USER_IMPOSM
		WITH	NOSUPERUSER
			NOCREATEDB
			NOCREATEROLE
			NOINHERIT
			LOGIN
			NOREPLICATION
			NOBYPASSRLS
			CONNECTION LIMIT -1
			PASSWORD ${PASSWORD_IMPOSM@Q};
			
	CREATE ROLE $USER_NOMINATIM_IMPORT
		WITH	SUPERUSER
			CREATEDB
			NOCREATEROLE
			NOINHERIT
			LOGIN
			NOREPLICATION
			NOBYPASSRLS
			CONNECTION LIMIT -1
			PASSWORD ${PASSWORD_NOMINATIM_IMPORT@Q};
			
	CREATE ROLE $USER_NOMINATIM_QUERY
		WITH	NOSUPERUSER
			NOCREATEDB
			NOCREATEROLE
			NOINHERIT
			LOGIN
			NOREPLICATION
			NOBYPASSRLS
			CONNECTION LIMIT -1
			PASSWORD ${PASSWORD_NOMINATIM_QUERY@Q};
EOC

# Create databases
psql -d $CONNECTION_STRING <<EOC
	CREATE DATABASE $DB_MAPSERVER
		WITH	OWNER			root
			TEMPLATE 		template1
			ENCODING		UTF8
			STRATEGY		WAL_LOG
			LC_COLLATE		'en_US.utf8'
			LC_CTYPE		'en_US.utf8'
			LOCALE_PROVIDER		libc
			TABLESPACE		DEFAULT
			ALLOW_CONNECTIONS	true
			CONNECTION LIMIT	-1
			IS_TEMPLATE		false;
EOC

#psql -d $CONNECTION_STRING <<EOC
#	CREATE DATABASE nominatim
#		WITH	OWNER			$USER_NOMINATIM_IMPORT
#			TEMPLATE 		template1
#			ENCODING		UTF8
#			STRATEGY		WAL_LOG
#			LC_COLLATE		'en_US.utf8'
#			LC_CTYPE		'en_US.utf8'
#			LOCALE_PROVIDER		libc
#			TABLESPACE		DEFAULT
#			ALLOW_CONNECTIONS	true
#			CONNECTION LIMIT	-1
#			IS_TEMPLATE		false;
#EOC

# Activate extensions and create relevant schemas on mapserver DB
psql -d ${CONNECTION_STRING}${DB_MAPSERVER} <<EOC
	CREATE EXTENSION postgis CASCADE;
	CREATE EXTENSION postgis_raster CASCADE;
	CREATE EXTENSION postgis_sfcgal CASCADE;
	CREATE EXTENSION postgis_topology CASCADE;
	CREATE EXTENSION hstore CASCADE;
	
	CREATE SCHEMA import AUTHORIZATION $USER_IMPOSM;
	CREATE SCHEMA backup AUTHORIZATION $USER_IMPOSM;
EOC

psql -d ${CONNECTION_STRING}${DB_MAPSERVER} <<EOC
	GRANT ALL ON DATABASE $DB_MAPSERVER TO $USER_IMPOSM;
	GRANT ALL ON SCHEMA public TO $USER_IMPOSM;
	GRANT ALL ON SCHEMA import TO $USER_IMPOSM;
	GRANT ALL ON SCHEMA backup TO $USER_IMPOSM;

	ALTER DEFAULT PRIVILEGES FOR ROLE $USER_IMPOSM IN SCHEMA public GRANT SELECT ON TABLES TO $USER_MAPSERVER;
	ALTER DEFAULT PRIVILEGES FOR ROLE $USER_IMPOSM IN SCHEMA import GRANT SELECT ON TABLES TO $USER_MAPSERVER;
	ALTER DEFAULT PRIVILEGES FOR ROLE $USER_IMPOSM IN SCHEMA backup GRANT SELECT ON TABLES TO $USER_MAPSERVER;
	
	GRANT CONNECT ON DATABASE $DB_MAPSERVER TO $USER_MAPSERVER;
EOC
